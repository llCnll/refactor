# <type(提交类型)>(<scope>(提交影响范围)): <subject>(提交描述) 

# <body>

# <footer>

# type类型字段包含:
#     feat: 新功能(feature)
#     fix: 修复bug
#     docs: 文档(documentation)
#     style: 格式化 ESLint调整等(不影响代码运行的变动)
#     refactor: 重构(即不是新增功能，也不是修改bug的代码变动)
#     test：增加测试
#     chore: 构建过程或辅助工具的变动
# scope影响范围：
#     用于说明 commit 影响的范围，比如修改的登录页、账户中心页等
# subject提交描述：
#    commit目的的简短描述，不超过50个字符
#    用动词开始, 比如新增xxx功能, 优化xxx逻辑, 更换xxx框架为xxx框架
# Body 部分是对本次 commit 的详细描述，可以分成多行
# Footer用来关闭 Issue或以BREAKING CHANGE开头，后面是对变动的描述、
#       以及变动理由和迁移方法
#
# 添加配置
# git config  commit.template .gitmessage.txt
# git config --global commit.template .gitmessage.txt
# 修改编辑工具
# git config core.editor vi
# git config --global core.editor vi
# 查看全局配置
# git config --gloabl --list
# 查看当前仓库配置
# git config --local --list
# 删除全局配置
# git config --global --unset commit.template
# 删除本地仓库配置
# git config --local --unset commit.template
